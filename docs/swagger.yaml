definitions:
  api.ApiError:
    properties:
      code:
        type: integer
      desc:
        type: string
    type: object
  api.Bar:
    properties:
      close:
        type: number
      high:
        type: number
      low:
        type: number
      open:
        type: number
      time:
        type: integer
      volume:
        type: number
    type: object
  api.QueryTradeResp:
    properties:
      count:
        type: integer
      trades:
        items:
          $ref: '#/definitions/models.Trade'
        type: array
    type: object
  api.Response:
    properties:
      data:
        type: object
      desc:
        type: string
      status:
        type: integer
    type: object
  api.SnapshotV2:
    properties:
      asks:
        items:
          type: '&{%!s(token.Pos=365) %!s(*ast.BasicLit=&{366 5 2}) string}'
        type: array
      bids:
        items:
          type: '&{%!s(token.Pos=329) %!s(*ast.BasicLit=&{330 5 2}) string}'
        type: array
      sequence:
        type: integer
    type: object
  models.Trade:
    properties:
      amount:
        type: number
      createdAt:
        type: string
      executedAt:
        type: string
      id:
        type: integer
      maker:
        type: string
      makerOrderID:
        type: string
      marketID:
        type: string
      price:
        type: number
      sequence:
        type: integer
      status:
        type: string
      taker:
        type: string
      takerOrderID:
        type: string
      takerSide:
        type: string
      transactionHash:
        type: string
      transactionID:
        type: integer
      updatedAt:
        type: string
    type: object
host: api.exnomy.com
info:
  contact:
    email: info@dexhigh.com
    name: Exnomy Support
    url: https://www.exnomy.com/terms-and-privacy
  description: This is Exnomy API Server.
  license:
    name: Apache 2.0
    url: https://github.com/blockbankcoltd/Exnomy/blob/master/LICENSE
  termsOfService: https://www.exnomy.com/terms-and-privacy
  title: Exnomy API Swagger Documentation
  version: "1.0"
paths:
  /assets:
    get:
      consumes:
      - application/json
      description: "**Get All the assets available on the exchange**\n```\n{\n\"status\":
        int,    [STATUS CODE, 0 for Success , Greater than 0 for ERROR]\n\"desc\":
        \"string\", [Description String for Success and Failure]\n\"data\": {\n\"tokens\":
        [\n{\n\"symbol\": \"string\"\t\t\t\t\t\t\t\t[Symbol of the asset, ex - BTC]\n\"name\":
        \"string\",\t\t\t\t\t\t\t\t[Name of the asset, ex - Bitcoin]\n\"Address\":
        \"string\", \t\t\t\t\t\t\t[Exnomy Smart contract specific address]\n\"Decimal\":
        int,\t\t\t\t\t\t\t\t\t[Decimal of the asset]\n\"updatedAt\": \"time\",\t\t\t\t\t\t\t\t[Time
        when asset updated in DB]\n\"createdAt\": \"time\"\t\t\t\t\t\t\t\t[Time when
        asset created in DB]\n}\n]\n}"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiError'
      summary: Show all assets present at exnomy.com
  /markets/{marketID}/candles:
    get:
      consumes:
      - application/json
      description: "**Get high, low, open, close and volume data for an interval defined
        between 'from' to 'to' unix timestamps.**\n```\n{\n\"status\": int,  \t\t
        \  \t      [STATUS CODE, 0 for Success , Greater than 0 for ERROR]\n\"desc\":
        \"string\", \t\t\t      [Description String for Success and Failure]\n\"data\":
        {\n\"candles\": [  \t\t\t      [Candle Information]\n{\n\"time\": int,          [Unix
        timestamp of Candle, ex - 1574232000]\n\"open\": \"string\",     [Open Price
        in this TimeStamp]\n\"close\": \"string\",    [Close Price in this Timestamp]\n\"low\":
        \"string\",      [Lowest Trade Price in this timestamp]\n\"high\": \"string\",
        \    [Highest timetsamp in this timestamp]\n\"volume\": \"string\"    [Total
        traded volume in this timestamp]\n}\n]\n}\n}\n```"
      parameters:
      - description: Market ID, ex XRP-BTC
        in: path
        name: marketID
        required: true
        type: string
      - description: Start unix timestamp of interval
        in: query
        name: from
        required: true
        type: integer
      - description: End unix timestamp of interval
        in: query
        name: to
        required: true
        type: integer
      - description: granularity, In secounds, ex - 5minute ==> 5 * 60 ==> 300
        in: query
        name: granularity
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Bar'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiError'
      summary: Get Bar data from 'from' to 'to'.
  /markets/{marketID}/orderbook:
    get:
      consumes:
      - application/json
      description: "**Find the latest snapshot version 2 corresponding to MarketID**\n```\n{\n\"status\":
        int,    \t\t\t\t[Status Code, 0 for Success , Greater than 0 for ERROR]\n\"desc\":
        \"string\", \t\t\t\t[Description String for Success and Failure]\n\"data\":
        {\n\"orderBook\": {\n\"sequence\": int, \t\t[Database specific Sequence Number]\n\"bids\":
        \t\t\t\t[\"Array of Objects\", [Array bids Object]\n[\n\"string\", \t\t[Bid
        Price, ex - \"0.00003108\"]\n\"string\", \t\t[Bif Amount, ex - \"330\"]\n]\n],\n\"asks\":
        \t\t\t\t[Array of Objects, [Array asks Object]\n[\n\"string\", \t\t[Ask price,
        ex - \"0.00003108\"]\n\"string\", \t\t[Ask Amount, ex - \"330\"]\n]\n]\n}\n}\n}"
      parameters:
      - description: 'MarketID (ex: XRP-BTC)'
        in: path
        name: marketID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.SnapshotV2'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiError'
      summary: Get OrderBook for a particular market ID.
  /markets/{marketID}/trades:
    get:
      consumes:
      - application/json
      description: |-
        **Find all the trades for a particular market**
        ```
        {
        "status": int,    [STATUS CODE, 0 for Success , Greater than 0 for ERROR]
        "desc": "string", [Description String for Success and Failure]
        "data": {
        "count": int,   [Size of the trades array object]
        "trades": [     [Array of Objects]
        {
        "id": int,   [DB Speacific Trade ID ]
        "transactionID": 36671, [DB Speacific Transaction ID]
        "transactionHash": [Hash of Trade Transaction on Blockchain ex - 0xfba0a551880a7a9458fdcd9e55078645da4a11c399be91efdd19a6a82014e731],
        "status": "string", [Status of the Trade transaction, ex - successful, pending, canceled]
        "marketID": "string", [Market ID, ex - XRP-BTC]
        "maker": "string", [Maker Account Address ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3]
        "taker": "string", [Taker Account Address ex - 0x31ebd457b999bf99759602f5ece5aa5033cb56b3],
        "takerSide": "string", [Side of Taker order ex - but OR sell]
        "makerOrderID": "string, [OrderID of Maker, ex - 0xbf9abcaa08bb820f791206564d261e3e36309ac16f5b091e507f0b14fb369656],
        "takerOrderID": "string, [OrderID of Taker, ex - 0xbf9abcaa08bb820f791206564d261e3e36309ac16f5b091e507f0b14fb369656],
        "sequence": uint, [DB specific sequence number]
        "amount": "uint", [Amount/Quantity of trade, ex - 230]
        "price": "string", [Price of Trade, ex - 0.00003096]
        "executedAt": "time", [Time When Trade executed,  ex - 2019-11-20T08:36:26Z]
        "createdAt": "time",  [Time When Trade created,  ex - 2019-11-20T08:36:26Z]
        "updatedAt": "time",  [Time When Trade executed,  ex - 2019-11-20T08:36:26Z]
        }
        ]
        }
        }
        ```
      parameters:
      - description: MarketID (ex XRP-BTC)
        in: path
        name: marketID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.QueryTradeResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.ApiError'
      summary: Show all trades for a market
schemes:
- https
securityDefinitions:
  ExnomyAuthToken:
    in: header
    name: Authorization (DEX-EXONOMY-AUTH should be like {address}#DEX-EXONOMY-AUTH@{time}#{signature})
    type: apiKey
swagger: "2.0"
